#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Run the lidtk main script."""

# core modules
import logging.config
import pkg_resources
import yaml

# 3rd party modules
import click

filepath = pkg_resources.resource_filename('lidtk', 'config.yaml')
with open(filepath, 'r') as stream:
    config = yaml.load(stream)
logging.config.dictConfig(config['LOGGING'])

# local modules
import lidtk
import lidtk.analysis.unicode_block
import lidtk.classifiers.char_distribution.char_dist_metric_train_test as cdm
import lidtk.classifiers.cld2_mod
import lidtk.classifiers.langdetect_mod
import lidtk.classifiers.langid_mod
import lidtk.classifiers.mlp
import lidtk.classifiers.nn
import lidtk.classifiers.text_cat
import lidtk.data.create_ml_dataset
import lidtk.data.download_documents


@click.group()
@click.version_option(version=lidtk.__version__)
def entry_point():
    pass

entry_point.add_command(lidtk.data.download_documents.main)
entry_point.add_command(lidtk.data.language_utils.main)
entry_point.add_command(lidtk.classifiers.text_cat.entry_point)
entry_point.add_command(lidtk.classifiers.cld2_mod.entry_point)
entry_point.add_command(lidtk.data.create_ml_dataset.main)
entry_point.add_command(lidtk.classifiers.mlp.entry_point)
entry_point.add_command(lidtk.classifiers.nn.entry_point)
entry_point.add_command(lidtk.classifiers.langdetect_mod.entry_point)
entry_point.add_command(lidtk.classifiers.langid_mod.entry_point)
entry_point.add_command(lidtk.analysis.unicode_block.main)
entry_point.add_command(cdm.entry_point)


if __name__ == '__main__':
    entry_point()
